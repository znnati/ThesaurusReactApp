{"version":3,"sources":["logo.svg","synonym.js","word.js","wordList.js","thesarusService.js","App.js","reportWebVitals.js","index.js"],"names":["KeyCodes","delimiters","Synonym","props","state","tags","handleSave","bind","i","this","setState","filter","tag","index","Save","className","length","ReactTags","inputFieldPosition","autofocus","handleDelete","handleAddition","placeholder","onClick","style","width","Word","React","Component","word","synonyms","renderSynonym","updateSynonyms","console","log","Synonyms","map","e","list","element","textTransform","args","t","text","Update","WordList","searchText","select","Select","Words","border","href","ThesaursService","thesaurusWords","take","skip","nbrPages","words","selectedWord","errorMessage","Search","SelectWord","a","headers","Headers","append","axios","get","response","data","error","event","target","value","w","toLowerCase","startsWith","requestOptions","method","body","JSON","stringify","fetch","then","json","src","logo","alt","onChange","AddWord","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58fa2a67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { WithContext as ReactTags } from 'react-tag-input';\n\nconst KeyCodes = {\n    comma: 188,\n    enter: [10, 13],\n  };\n  \n  const delimiters = [...KeyCodes.enter, KeyCodes.comma];\n \n  export default class Synonym extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= {\n            tags: [],\n        };\n        this.handleSave = this.handleSave.bind(this);\n    }\n\n    handleDelete(i) {\n        const { tags } = this.state;\n        this.setState({tags: tags.filter((tag, index) => index !== i)});\n    }\n\n    handleAddition(tag) {\n        this.setState(state => ({ tags: [...state.tags, tag] }));\n    }\n\n    handleSave(){\n        this.props.Save(this.state.tags);        \n        this.setState({tags : []});\n    }\n\n    render(){\n        const { tags } = this.state;\n        var disabled = tags.length > 0 ? \"\" : \"disabled\";        \n        var className = \"btn btn-primary form-control \" + disabled;\n        \n        return (\n            <div className=\"form-group col-md-8 pt-3\">\n                <ReactTags\n                    tags={tags}\n                    inputFieldPosition=\"top\"\n                    autofocus={false}\n                    handleDelete={this.handleDelete.bind(this)}\n                    handleAddition={this.handleAddition.bind(this)}\n                    delimiters={delimiters}\n                    placeholder=\"new sysnonyms... (use enter or , to add many)\"/>\n\n                <div className=\"form-group text-left pl-3 fload-right\">\n                    <button className={className} onClick={this.handleSave} style={{width: 300}}>\n                        Add synonyms to # {this.props.Word}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport Synonym from './synonym';\n\nexport default class Word extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            word: \"\",\n            synonyms: [],\n        }; \n        this.renderSynonym = this.renderSynonym.bind(this);   \n        this.updateSynonyms = this.updateSynonyms.bind(this);\n    }\n\n    renderSynonym(){        \n        console.log(this.props.Synonyms.map(e => e));\n        var list = this.props.Synonyms.map(function(element){\n                    return element && <li key={element} className=\"list-group-item\"\n                               style={{textTransform: 'capitalize'}}>{element}</li>\n        });\n\n        return (\n            <div className=\"col-md-4\">\n                <h1 className=\"text-center mb-5 text-capitalize\">{this.props.Word}</h1>\n                <ul className=\"list-group \"> { list } </ul>\n            </div>\n        );\n    }\n\n    updateSynonyms(args){\n       var synonyms = args.map(t => t.text);       \n       this.props.Update(this.props.Word, synonyms);\n    }\n\n\n    render(){\n        return (\n            <div className=\"col-md-12 row\">\n                {this.renderSynonym()}\n                \n                {this.props.Word && <Synonym Word={this.props.Word} Save={this.updateSynonyms}/>}\n            </div>\n        );\n    }\n}\n","\nimport React from \"react\";\n\nexport default class WordList extends React.Component{\n \n    constructor(props){\n        super(props);\n        this.state = {\n            list: [],\n            searchText: \"\",\n        }\n\n        this.select = this.select.bind(this);\n    }\n\n    select(args){\n        this.props.Select(args);\n    }\n\n    render(){\n        return(\n            <div className=\"form-group\">\n                <ul className=\"list-group col-md-10\">\n                    {\n                        this.props.Words.map(element => {\n                            return (element &&\n                            <li key={element.word} className=\"list-group-item\" style={{border: 'none'}}>\n                                <a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                   onClick={() => this.select(element.word)} \n                                   style={{textTransform: 'capitalize'}}>\n                                        {element.word}\n                                    <span className=\"badge badge-primary badge-pill float-right\">\n                                        {[...element.synonyms ?? []]?.length}\n                                    </span>\n                                </a>                                \n                            </li>)\n                        })\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n","\nimport React from \"react\";\nimport Word from './word';\nimport WordList from './wordList';\nimport axios from \"axios\";\nimport logo from './logo.svg';\n\nexport default class ThesaursService extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= {\n            thesaurusWords: [],            \n            take: 100,\n            skip: 0,\n            nbrPages: 0,\n            words : [],\n            searchText: \"\",\n            selectedWord: \"\",\n            synonyms : [],\n            errorMessage: \"\",\n        };\n        this.Search = this.Search.bind(this);\n        this.Update = this.Update.bind(this);\n        this.SelectWord = this.SelectWord.bind(this);\n    }\n\n    async componentDidMount(){\n        var take = this.state.take;\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        \n        try \n        {    \n            var response = await axios.get('http://127.0.0.1:5000/api/thesaurus/getAll', headers);\n            const words = response.data;\n            \n            this.setState({thesaurusWords: words});\n            this.setState({words: words});\n        }\n        catch (error) {\n            console.error('There was an error!', error);\n        };\n        \n       // handle success\n           \n         \n\n        var nbrPages = this.state.thesaurusWords.length / take;\n        this.setState({nbrPages: nbrPages});\n    }\n    \n    Search(event){\n        var args = event.target.value;\n        console.log(\"Search for \" + args);\n        this.setState({searchText: args});\n        this.setState({words: this.state.thesaurusWords.filter(w => \n            w.word.toLowerCase().startsWith(args.toLowerCase()))});\n    }\n\n    Update(w, args){\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(args)\n            };\n        fetch('http://localhost:5000/api/thesaurus/post?word=' + w, requestOptions)\n          .then(response => { \n                response.json();\n                this.setState({synonyms: [...this.state.synonyms, args]});\n        });\n    }\n\n    SelectWord(args){ \n        fetch(\"http://localhost:5000/api/thesaurus/get?word=\" + args)\n        .then(response => response.json())\n        .then(data => {\n            console.log(\"2 Word: \" + args + \". Synonyms: \" + data);\n            var synonyms = data;\n            this.setState({selectedWord: args, synonyms: synonyms});\n        });\n    }\n\n    AddWord(){\n        this.setState({selectedWord: this.state.searchText});\n    }\n\n    render(){\n        return (\n            <div className=\"row\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" /> \n                \n                <div className=\"col-md-3\">\n                    <input className=\"form-control col-md-8\" value={this.state.searchText} \n                           onChange={this.Search} placeholder=\"Search...\" />\n                \n                    <WordList Words={this.state.words} Select={this.SelectWord} Search={this.Search}/>\n                    {\n                   this.state.words.length === 0 ? \n                        (<div className=\"form-group text-left pl-3 fload-right\">\n                            <button className=\"btn btn-primary form-control\" \n                                    onClick={() => this.AddWord()}>\n                            Add {this.state.searchText} to dictionary</button>\n                        </div>)\n                       :(<div></div>)\n                    }\n                </div>\n\n                <div className=\"col-md-8 row pl-5 text-center\">\n                    <Word Word={this.state.selectedWord} Synonyms={this.state.synonyms} Update={this.Update} />\n                </div>\n        </div>\n        );\n    }\n}\n\n  \n","import logo from './logo.svg';\nimport './App.css';\nimport ThesaursService from './thesarusService';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header p-5\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" /> \n        <h1>Thesaurus</h1>\n        <h5>Your own personal knowledge tool to IMPRESS your friends</h5>\n      </header>  \n      <main>\n        <ThesaursService />        \n      </main>    \n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}